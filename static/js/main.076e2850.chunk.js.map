{"version":3,"sources":["components/icon/b.svg","components/Flights.js","components/Chats.js","App.js","index.js"],"names":["socket","io","connect","path","Flights","useState","flight","setFlight","position","setPosition","useEffect","on","message","prev","emit","airplanePng","Icon","iconUrl","plane","iconSize","iconAnchor","shadowUrl","shadowSize","shadowAnchor","id","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","map","pos","posiciones","Marker","icon","Popup","code","vuelos","multiPolyline","origin","destination","Polyline","pathOptions","color","positions","className","vuelo","airline","seats","passengers","pasajero","name","age","Chat","date","state","setState","chat","setChat","onTextChange","e","target","value","onSubmit","preventDefault","TextField","onChange","label","variant","index","moment","Date","format","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.076e2850.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/b.57bdda0c.svg\";","import React, { useState, useEffect} from 'react';\nimport io from \"socket.io-client\";\nimport { Icon } from 'leaflet';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet'\n\nimport plane from './icon/b.svg'\nimport 'leaflet/dist/leaflet.css'\nimport './leaflet.css'\n\nconst socket = io.connect(\"wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl\", {\n    path: '/flights'\n});\n\nconst Flights = () => {\n  const [ flight, setFlight] = useState([]);\n  const [ position, setPosition ] = useState([]);\n\n  useEffect(() => {\n    socket.on('POSITION', message => {\n      setPosition((prev) => ([...prev, message]));\n    })\n  }, []);\n\n  useEffect(() => {\n    socket.emit('FLIGHTS'); \n    socket.on('FLIGHTS', message => {\n      setFlight(message);\n    });\n  }, []);\n\n  const airplanePng = new Icon({\n    iconUrl: plane,\n    iconSize: [30,30],\n    iconAnchor: null,\n    shadowUrl: null,\n    shadowSize: null,\n    shadowAnchor: null\n  });\n\n  const renderPositions = () =>{\n    return position.map((pos) => {\n      const posiciones= [\n        pos.position[0], pos.position[1]\n      ]\n      return (\n        <Marker position={posiciones} icon={airplanePng}>\n          <Popup code={pos.code}>\n            <code>{pos.code}</code>\n          </Popup>\n        </Marker>  \n      )\n    })\n  }\n\n  const renderPath = () => {\n    return flight.map((vuelos) => {\n    const multiPolyline = [\n      [ vuelos.origin[0], vuelos.origin[1] ],\n      [ vuelos.destination[0], vuelos.destination[1] ],\n    ]\n    return (\n      <Polyline pathOptions={{ color: 'red' }} positions={multiPolyline} />\n    )\n  })}\n\n  const renderInfo = () => {\n\t\treturn flight.map((vuelo) => (\n\t\t\t<div >\n\t\t\t\t<h3>{vuelo.code}</h3>\n        <p>Aerolínea:       {vuelo.airline}</p>\n        <p>Origen:          {vuelo.origin[0]} ; {vuelo.origin[1]}</p>\n        <p>Destino:         {vuelo.destination[0]} ; {vuelo.destination[1]}</p>\n        <p>Avión:           {vuelo.plane}</p>\n        <p>Número asientos: {vuelo.seats}</p>\n        <p>Pasajeros:</p>\n        {vuelo.passengers.map((pasajero) => {\n          return (\n            <li>{pasajero.name}, edad:{pasajero.age} </li>\n            )\n          })\n        }\n\t\t\t</div>\n\t\t))\n  }\n\n  return (\n    <div>\n      <div  id=\"leaflet-container\">\n      <MapContainer center={[0, 0]} zoom={3.1} scrollWheelZoom={false}>\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        {renderPositions()}\n        {renderPath()}\n      </MapContainer>      \n    </div>\n    <div className='flight-information-container'>\n      <h2>Información de vuelos</h2>\n      {renderInfo()}\n    </div>\n    </div>\n  )\n};\n\nexport default Flights;","import React, { useState, useEffect} from 'react';\nimport io from \"socket.io-client\";\nimport TextField from \"@material-ui/core/TextField\"\nimport moment from 'moment';\nimport './Chats.css';\n\nconst socket = io.connect(\"wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl\", {\n    path: '/flights'\n});\n\n\nconst Chat = () => {\n  const [ state, setState ] = useState({ message: \"\", date: \"\", name: \"\" })\n\tconst [ chat, setChat ] = useState([])\n\n\n  useEffect(\n\t\t() => {\n\t\t\tsocket.on(\"CHAT\", ({ name, date, message }) => {\n        setChat([ ...chat, { name, date, message } ])\n\t\t\t})\n\t\t},\n\t\t[ chat ]\n  )\n  const onTextChange = (e) => {\n\t\tsetState({ ...state, [e.target.name]: e.target.value })\n\t}\n\n\tconst onMessageSubmit = (e) => {\n    e.preventDefault()\n    // const date = moment().format('LLL')\n\t\tconst { name, message } = state\n\t\tsocket.emit(\"CHAT\", { name, message })\n    setState({ message: \"\", name})\n\t}\n  \n  const renderChat = () => {\n\t\treturn chat.map(({ name, date, message }, index) => (\n\t\t\t<div key={index}>\n\t\t\t\t<h3>\n\t\t\t\t\t{name}: {moment(new Date(date)).format('MMMM Do YYYY, h:mm:ss a')}:<span>{message}</span>\n\t\t\t\t</h3>\n\t\t\t</div>\n\t\t))\n  }\n  \n  return (\n\t\t<div className=\"card\">\n\t\t\t<form onSubmit={onMessageSubmit}>\n\t\t\t\t<h2>Chat</h2>\n\t\t\t\t<div className=\"name-field\">\n\t\t\t\t\t<TextField name=\"name\" onChange={(e) => onTextChange(e)} value={state.name} label=\"Name\" />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tname=\"message\"\n\t\t\t\t\t\tonChange={(e) => onTextChange(e)}\n\t\t\t\t\t\tvalue={state.message}\n\t\t\t\t\t\tid=\"outlined-multiline-static\"\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tlabel=\"Message\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<button>Send Message</button>\n\t\t\t</form>\n\t\t\t<div className=\"render-chat\">\n\t\t\t\t<h2>Centro de Control</h2>\n\t\t\t\t{renderChat()}\n\t\t\t</div>\n\t\t\t\n\t\t</div>\n\t)\n}\n\nexport default Chat;\n","import React from \"react\";\n\n// import {BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Flights from \"./components/Flights.js\";\nimport Chats from \"./components/Chats.js\";\n\n//import './App.css';\n\nconst App = () => {\n  return (\n    <div>\n      <h1>Mapa en Vivo</h1>\n      <Flights />\n      <h1>Chat de Control</h1>\n      <Chats />\n    </div>\n  );\n};\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.querySelector('#root')\n);\n"],"sourceRoot":""}